sudo: required

language: r

os:
  - linux


# Setup anaconda
before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p /home/travis/miniconda3
  - export PATH=/home/travis/miniconda3/bin:$PATH
  - export LD_LIBRARY_PATH=/home/travis/R-bin/lib/R/lib:/home/travis/miniconda3/lib:$LD_LIBRARY_PATH
  - R -e 'install.packages(c("Matrix", "RcppEigen", "numDeriv"),  repos="http://cran.us.r-project.org", dependencies=T)'

## Cache R packages
cache: packages

## Set up conda environment and PyMB
install:
  - conda create -c conda-forge -n pymb_test -y python=3.6 numpy scipy libiconv libxml2 lxml scikit-sparse
  - source activate pymb_test
  - which -a python && pip install rpy2 && python -c "import rpy2.rinterface as rinterface"
  - cd ../PyMB && python setup.py install

jobs:
  include:
    - stage: Native TMB install from CRAN and building model using native g++ and subprocess
      script:
        - bash bin/01_install_TMB_from_CRAN.sh
        - python Examples/linreg.py --use_eigen_inc=1 --use_native_compiler=0
    - stage: Native TMB install from CRAN and building model using R subprocess
      script:
        - bash bin/01_install_TMB_from_CRAN.sh
        - python Examples/linreg.py --use_eigen_inc=1 --use_native_compiler=1
    - stage: Source TMB build and building model using native g++ and subprocess
      script:
        - bash bin/02_build_TMB_from_source.sh
        - python Examples/linreg.py --use_eigen_inc=0 --use_native_compiler=0
    - stage: Source TMB build and building model using R subprocess
      script:
        - bash bin/02_build_TMB_from_source.sh
        - python Examples/linreg.py --use_eigen_inc=0 --use_native_compiler=1


notifications:
  email:
    on_success: never
    on_failure: never
